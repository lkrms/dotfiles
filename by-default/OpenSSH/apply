#!/usr/bin/env bash

. "$df_root/bin/lib/bash-helpers.sh" || exit

# As per sshd(8), revoke read and write access to privileged files in ~/.ssh for
# everyone except the owner, otherwise authorized_keys won't be honoured
command=(chmod -c go-rw)
if [[ -n ${df_dryrun:+1} ]]; then
    command=(echo "  - would have run: ${command[*]}")
fi
find -L ~/.ssh -type f ! -name '*.pub' -print0 |
    xargs -0r "${command[@]}"

# Ditto for write access to directories between:
# - ~ and ~/.ssh
# - ~ and the parent of ~/.ssh/authorized_keys
parent=$(realpath ~)
children=("$(realpath ~/.ssh)")
if [[ -f ~/.ssh/authorized_keys ]]; then
    child=$(realpath ~/.ssh/authorized_keys)
    children[1]=${child%/*}
fi

args=()
i=0
for child in "${children[@]}"; do
    while true; do
        args[i++]=$child
        [[ ! $child -ef $parent ]] ||
            break
        # If $child is outside ~, restrict access to ~ and $child, otherwise
        # restrict every directory in the hierarchy from $child to ~
        [[ ${child#$parent} != "$child" ]] || {
            args[i++]=$parent
            break
        }
        child=${child%/*}
    done
done

IFS=$'\n'
args=($(printf '%s\n' "${args[@]}" | sort -ru))
maybe chmod -c go-w "${args[@]}"
