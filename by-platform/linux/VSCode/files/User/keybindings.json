[
    {
        "key": "ctrl+enter",
        "command": "-acceptRenameInputWithPreview",
        "when": "config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing"
    },
    {
        "key": "shift+enter",
        "command": "acceptRenameInputWithPreview",
        "when": "config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing"
    },
    {
        "key": "alt+meta+backspace",
        "command": "bracketeer.removeBrackets"
    },
    {
        "key": "ctrl+shift+alt+i",
        "command": "-bracketeer.removeBrackets"
    },
    {
        "key": "ctrl+shift+alt+'",
        "command": "-bracketeer.removeQuotes"
    },
    {
        "key": "shift+alt+meta+backspace",
        "command": "bracketeer.removeQuotes"
    },
    {
        "key": "alt+meta+\\",
        "command": "bracketeer.swapBrackets"
    },
    {
        "key": "ctrl+shift+alt+k",
        "command": "-bracketeer.swapBrackets"
    },
    {
        "key": "ctrl+shift+alt+;",
        "command": "-bracketeer.swapQuotes"
    },
    {
        "key": "shift+alt+meta+\\",
        "command": "bracketeer.swapQuotes"
    },
    {
        "command": "breadcrumbs.toggle",
        "key": "ctrl+alt+b"
    },
    {
        "command": "-editor.action.addCommentLine",
        "key": "ctrl+k ctrl+c",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+/",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "-editor.action.copyLinesDownAction",
        "key": "ctrl+shift+alt+down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.copyLinesDownAction",
        "key": "shift+alt+down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "-editor.action.copyLinesUpAction",
        "key": "ctrl+shift+alt+up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.copyLinesUpAction",
        "key": "shift+alt+up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+delete",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+f3",
        "command": "-editor.action.dirtydiff.next",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "ctrl+shift+f12",
        "command": "editor.action.dirtydiff.next",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "ctrl+shift+f11",
        "command": "editor.action.dirtydiff.previous",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "shift+alt+f3",
        "command": "-editor.action.dirtydiff.previous",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "command": "-editor.action.formatDocument",
        "key": "ctrl+shift+i",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "command": "editor.action.formatDocument",
        "key": "shift+alt+f",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "command": "-editor.action.formatDocument.none",
        "key": "ctrl+shift+i",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "command": "editor.action.formatDocument.none",
        "key": "shift+alt+f",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "ctrl+shift+,",
        "command": "-editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
        "key": "ctrl+shift+l",
        "when": "editorTextFocus"
    },
    {
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "key": "shift+alt+i",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+\\",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+\\",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+f8",
        "command": "-editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "f8",
        "command": "editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "f8",
        "command": "-editor.action.marker.nextInFiles",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+f8",
        "command": "-editor.action.marker.prev",
        "when": "editorFocus"
    },
    {
        "key": "shift+f8",
        "command": "editor.action.marker.prev",
        "when": "editorFocus"
    },
    {
        "key": "shift+f8",
        "command": "-editor.action.marker.prevInFiles",
        "when": "editorFocus"
    },
    {
        "command": "-editor.action.removeCommentLine",
        "key": "ctrl+k ctrl+u",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.selectHighlights",
        "key": "ctrl+shift+a",
        "when": "editorFocus"
    },
    {
        "command": "-editor.action.selectHighlights",
        "key": "ctrl+shift+l",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+\\",
        "command": "editor.action.selectToBracket",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.action.sortLinesAscending",
        "key": "f9",
        "when": "editorTextFocus && editorHasSelection && !inDebugMode"
    },
    {
        "key": "ctrl+k l",
        "command": "editor.action.transformToCamelcase"
    },
    {
        "command": "editor.action.transformToLowercase",
        "key": "ctrl+k ctrl+l"
    },
    {
        "command": "editor.action.transformToTitlecase",
        "key": "ctrl+k ctrl+t"
    },
    {
        "command": "editor.action.transformToUppercase",
        "key": "ctrl+k ctrl+u"
    },
    {
        "key": "ctrl+shift+f9",
        "command": "editor.debug.action.runToCursor"
    },
    {
        "key": "ctrl+alt+h",
        "command": "-extension.convertToHEX",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+r",
        "command": "-extension.convertToRGBA",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+t",
        "command": "-extension.toggleHEX",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+g",
        "command": "git.openChange",
        "when": "editorTextFocus && !isInDiffEditor"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "git.stageSelectedRanges",
        "when": "editorHasSelection && editorTextFocus"
    },
    {
        "key": "ctrl+meta+/",
        "command": "github.copilot.toggleCopilot"
    },
    {
        "key": "ctrl+alt+v",
        "command": "gitlens.copyShaToClipboard"
    },
    {
        "command": "gitlens.externalDiff",
        "key": "ctrl+k ctrl+g"
    },
    {
        "command": "-markdown.extension.onShiftTabKey",
        "key": "shift+tab",
        "when": "editorTextFocus && markdown.extension.editor.cursor.inList && !editorHasMultipleSelections && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    {
        "key": "down",
        "command": "multiCommand.previewOnDownArrow",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "up",
        "command": "multiCommand.previewOnUpArrow",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+shift+o",
        "command": "outline.focus",
        "when": "!auxiliaryBarFocus"
    },
    {
        "key": "ctrl+k shift+f",
        "command": "-poor-mans-t-sql-formatter.formatSql",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+meta+f",
        "command": "poor-mans-t-sql-formatter.formatSql",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'sql'"
    },
    {
        "key": "ctrl+enter",
        "command": "-refactorPreview.apply",
        "when": "refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'"
    },
    {
        "key": "shift+enter",
        "command": "refactorPreview.apply",
        "when": "refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'"
    },
    {
        "command": "refactorPreview.discard",
        "key": "escape",
        "when": "refactorPreview.enabled && focusedView == 'refactorPreview'"
    },
    {
        "key": "ctrl+alt+h",
        "command": "-rest-client.history"
    },
    {
        "command": "-sortLines.sortLines",
        "key": "f9",
        "when": "editorTextFocus"
    },
    {
        "command": "sortLines.sortLinesNatural",
        "key": "ctrl+k f5",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+q",
        "command": "sql-formatter-vscode.format-selection"
    },
    {
        "key": "alt+meta+/",
        "command": "surround.with.phpunitIgnore"
    },
    {
        "key": "alt+a",
        "command": "toggle",
        "when": "editorTextFocus && editorLangId == 'markdown'",
        "args": {
            "id": "rulers",
            "value": [
                {
                    "editor.rulers": [
                        {
                            "color": "#6662",
                            "column": 80
                        },
                        120,
                        0
                    ]
                },
                {
                    "editor.rulers": [
                        {
                            "color": "#6662",
                            "column": 72
                        },
                        120,
                        0
                    ]
                },
                {
                    "editor.rulers": [
                        120,
                        0
                    ]
                }
            ]
        }
    },
    {
        "key": "alt+a",
        "command": "toggle",
        "when": "editorTextFocus && editorLangId != 'markdown'",
        "args": {
            "id": "rulers",
            "value": [
                {
                    "editor.rulers": [
                        {
                            "color": "#6662",
                            "column": 80
                        },
                        120,
                        0
                    ]
                },
                {
                    "editor.rulers": [
                        120,
                        0
                    ]
                }
            ]
        }
    },
    {
        "key": "alt+l",
        "command": "toggle",
        "args": {
            "id": "intelephense.codeLens",
            "value": [
                {
                    "intelephense.codeLens.implementations.enable": true,
                    "intelephense.codeLens.overrides.enable": true,
                    "intelephense.codeLens.parent.enable": true,
                    "intelephense.codeLens.references.enable": true,
                    "intelephense.codeLens.usages.enable": true
                },
                {
                    "intelephense.codeLens.implementations.enable": false,
                    "intelephense.codeLens.overrides.enable": false,
                    "intelephense.codeLens.parent.enable": false,
                    "intelephense.codeLens.references.enable": false,
                    "intelephense.codeLens.usages.enable": false
                }
            ]
        }
    },
    {
        "key": "alt+p",
        "command": "toggle",
        "when": "editorTextFocus",
        "args": {
            "id": "prose",
            "value": [
                {
                    "prettier.proseWrap": "always"
                },
                {
                    "prettier.proseWrap": "never"
                }
            ]
        }
    },
    {
        "key": "alt+x",
        "command": "toggle",
        "args": {
            "id": "phpunit",
            "value": [
                {
                    "phpunit.php": "php"
                },
                {
                    "phpunit.php": "php-xdebug"
                }
            ]
        }
    },
    {
        "key": "ctrl+shift+space",
        "command": "toggle.diff.ignoreTrimWhitespace",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+shift+g",
        "command": "toggle.diff.renderSideBySide",
        "when": "editorTextFocus && isInDiffEditor"
    },
    {
        "command": "-toggleFindCaseSensitive",
        "key": "alt+c",
        "when": "editorFocus"
    },
    {
        "command": "toggleFindCaseSensitive",
        "key": "ctrl+alt+c",
        "when": "editorFocus"
    },
    {
        "command": "-toggleFindRegex",
        "key": "alt+r",
        "when": "editorFocus"
    },
    {
        "command": "toggleFindRegex",
        "key": "ctrl+alt+r",
        "when": "editorFocus"
    },
    {
        "command": "-toggleFindWholeWord",
        "key": "alt+w",
        "when": "editorFocus"
    },
    {
        "command": "toggleFindWholeWord",
        "key": "ctrl+alt+w",
        "when": "editorFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleSearchCaseSensitive",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+alt+c",
        "command": "toggleSearchCaseSensitive",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleSearchEditorCaseSensitive",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "ctrl+alt+c",
        "command": "toggleSearchEditorCaseSensitive",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchEditorRegex",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "ctrl+alt+r",
        "command": "toggleSearchEditorRegex",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchEditorWholeWord",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "ctrl+alt+w",
        "command": "toggleSearchEditorWholeWord",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchRegex",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+alt+r",
        "command": "toggleSearchRegex",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchWholeWord",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+alt+w",
        "command": "toggleSearchWholeWord",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+meta+u",
        "command": "vscsm.openInSublimeMerge"
    },
    {
        "key": "alt+w",
        "command": "workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "ctrl+k u",
        "command": "-workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "command": "workbench.action.compareEditor.nextChange",
        "key": "alt+down",
        "when": "textCompareEditorVisible"
    },
    {
        "command": "-workbench.action.compareEditor.nextChange",
        "key": "alt+f5",
        "when": "textCompareEditorVisible"
    },
    {
        "command": "workbench.action.compareEditor.previousChange",
        "key": "alt+up",
        "when": "textCompareEditorVisible"
    },
    {
        "command": "-workbench.action.compareEditor.previousChange",
        "key": "shift+alt+f5",
        "when": "textCompareEditorVisible"
    },
    {
        "command": "workbench.action.editor.changeLanguageMode",
        "key": "ctrl+k ctrl+m"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.editor.nextChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "ctrl+f12",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+f11",
        "command": "workbench.action.editor.previousChange",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.editor.previousChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "command": "workbench.action.editorLayoutSingle",
        "key": "shift+alt+1"
    },
    {
        "command": "workbench.action.editorLayoutThreeColumns",
        "key": "shift+alt+3"
    },
    {
        "command": "workbench.action.editorLayoutTwoByTwoGrid",
        "key": "shift+alt+4"
    },
    {
        "command": "workbench.action.editorLayoutTwoColumns",
        "key": "shift+alt+2"
    },
    {
        "key": "shift+alt+meta+p",
        "command": "workbench.action.evenEditorWidths"
    },
    {
        "key": "alt+meta+left",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "alt+meta+right",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "command": "workbench.action.gotoSymbol",
        "key": "ctrl+r",
        "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
    },
    {
        "command": "-workbench.action.gotoSymbol",
        "key": "ctrl+shift+o",
        "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
    },
    {
        "key": "shift+alt+meta+i",
        "command": "workbench.action.inspectContextKeys"
    },
    {
        "command": "workbench.action.moveActiveEditorGroupLeft",
        "key": "shift+alt+meta+left"
    },
    {
        "command": "workbench.action.moveActiveEditorGroupRight",
        "key": "shift+alt+meta+right"
    },
    {
        "command": "-workbench.action.moveEditorToFirstGroup",
        "key": "shift+alt+1"
    },
    {
        "command": "-workbench.action.moveEditorToLastGroup",
        "key": "shift+alt+9"
    },
    {
        "command": "workbench.action.moveEditorToNextGroup",
        "key": "alt+meta+]"
    },
    {
        "command": "-workbench.action.moveEditorToNextGroup",
        "key": "ctrl+alt+right"
    },
    {
        "command": "workbench.action.moveEditorToPreviousGroup",
        "key": "alt+meta+["
    },
    {
        "command": "-workbench.action.moveEditorToPreviousGroup",
        "key": "ctrl+alt+left"
    },
    {
        "key": "ctrl+-",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "ctrl+alt+-",
        "command": "-workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "command": "-workbench.action.openRecent",
        "key": "ctrl+r"
    },
    {
        "key": "ctrl+shift+,",
        "command": "workbench.action.openSettings2"
    },
    {
        "command": "workbench.action.reloadWindow",
        "key": "ctrl+meta+f5",
        "when": "!isAuxiliaryWindowFocusedContext"
    },
    {
        "command": "-workbench.action.reloadWindow",
        "key": "ctrl+r",
        "when": "isDevelopment && !isAuxiliaryWindowFocusedContext"
    },
    {
        "command": "workbench.action.selectTheme",
        "key": "ctrl+k ctrl+c"
    },
    {
        "command": "-workbench.action.selectTheme",
        "key": "ctrl+k ctrl+t"
    },
    {
        "command": "-workbench.action.tasks.build",
        "key": "ctrl+shift+b",
        "when": "taskCommandsRegistered"
    },
    {
        "key": "shift+alt+meta+b",
        "command": "workbench.action.tasks.build",
        "when": "taskCommandsRegistered"
    },
    {
        "key": "alt+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+c",
        "command": "workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "alt+r",
        "command": "-workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+r",
        "command": "workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+w",
        "command": "workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.toggleAuxiliaryBar",
        "when": "auxiliaryBarFocus"
    },
    {
        "key": "ctrl+alt+d",
        "command": "workbench.action.toggleLightDarkThemes"
    },
    {
        "key": "alt+meta+up",
        "command": "workbench.action.toggleMaximizeEditorGroup",
        "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
    },
    {
        "key": "ctrl+k ctrl+m",
        "command": "-workbench.action.toggleMaximizeEditorGroup",
        "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
    },
    {
        "command": "-workbench.action.toggleSidebarVisibility",
        "key": "ctrl+b"
    },
    {
        "command": "workbench.action.toggleSidebarVisibility",
        "key": "ctrl+shift+b"
    },
    {
        "command": "-workbench.action.zoomIn",
        "key": "ctrl+="
    },
    {
        "command": "-workbench.action.zoomIn",
        "key": "ctrl+shift+="
    },
    {
        "command": "-workbench.action.zoomOut",
        "key": "ctrl+-"
    }
]
